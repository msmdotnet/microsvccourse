name: Build and deploy an app to AKS

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  # Local environment variables used later in the workflow
  AZURE_CONTAINER_REGISTRY: 'blazingpizzaacr858667571'
  CONTAINER_NAME: 'getspecialswebapi'
  RESOURCE_GROUP: 'blazingpizzarg'
  CLUSTER_NAME: 'blazingpizzaaks'
  DEPLOYMENT_MANIFEST_PATH: './Deployments/GetSpecialsWebAPI-Deployment.yml'
  DOCKER_PATH: './src/NorthWind.BlazingPizza.GetSpecials.WebAPI/Dockerfile'

jobs:
  buildImage:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
      # Checks out the repository this file is in
      - uses: actions/checkout@v3

      # Logs in with your Azure credentials stored in GitHub secrets
      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'

      # Builds and pushes an image up to your Azure Container Registry
      - name: Build and push image to ACR
        run: |
          az acr build --file ${{ env.DOCKER_PATH }} --image ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }} --registry ${{ env.AZURE_CONTAINER_REGISTRY }} -g ${{ env.RESOURCE_GROUP }} .
  deploy:
     permissions:
       actions: read
       contents: read
       id-token: write
     runs-on: ubuntu-latest
     needs: [buildImage]
     steps:
       - uses: actions/checkout@v3
       - name: Azure login
         uses: azure/login@v1.4.6
         with:
           creds: '${{ secrets.AZURE_CREDENTIALS }}'
       - name: Set up kubelogin for non-interactive login
         uses: azure/use-kubelogin@v1
         with:
           kubelogin-version: 'v0.1.5'
       - name: Get K8s context
         uses: azure/aks-set-context@v3
         with:
            resource-group: ${{ env.RESOURCE_GROUP }}
            cluster-name: ${{ env.CLUSTER_NAME }}
            admin: 'false'
            use-kubelogin: 'true'
       - name: Deploys application
         uses: Azure/k8s-deploy@v5
         with:
           action: deploy
           manifests: ${{ env.DEPLOYMENT_MANIFEST_PATH }}
           images: |
             ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/{{ env.CONTAINER_NAME }}:${{ github.sha }}
           pull-images: false
           
